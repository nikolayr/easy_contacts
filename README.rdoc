= easy_contacts
Create Contact plugin into Redmine. All work is done only in plugin.

-  create fully REST controller with associated views for creating, updating and deleting
contacts. Index (list) will be via custom query.
(create class contact query inherited from query)

-  model Contact has these attributes: first name, last name and timestamps.
   You should also define custom fields and attach files

-  index is accesible through project menu

-  contact plugin act as project module and have permissions to view and creating entries

-  all contacts are searchable via standard Redmineâ€˜s search
-  creating and updating contact is visible in user profile (activity)

---

2do
 review custom_fields/index template (why it's not showing my

 switch to custom_values table
  load custom fields from custom_fields where
SQL (1.8ms)  INSERT INTO "custom_fields" ("default_value", "description", "editable", "field_format",
"format_store", "is_filter", "is_for_all", "is_required", "max_length", "min_length", "multiple", "name",
"position", "possible_values", "regexp", "searchable", "type", "visible")
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
[["default_value", "0"], ["description", "int for "], ["editable", true], ["field_format", "int"], ["format_store", "---\n:url_pattern: ''\n"],
["is_filter", false], ["is_for_all", false], ["is_required", false], ["max_length", nil], ["min_length", nil], ["multiple", false], ["name", "cc_int"],
["position", 2], ["possible_values", "--- \n...\n"], ["regexp", ""], ["searchable", false], ["type", "EasyContactsCustomField"], ["visible", true]]

 custom_field.rb - field_format (validate presence)
 _form_custom_fields.html.erb add ContactCustomField to /custom_fields/new
 add custom field records for contacts custom_fields_tabs
 read more custom_fields_helper
 restore custom_field_values and custom_fields vars in controller
 add def all_issue_custom_fields as all_contact_custom_fields

 after_initialize in ActiveRec:Base, can init custom fields

 add custom fields
 add custom query to contacts#index
 add pagination

 set acts_as_activity_provider within easy_contact model

 make contacts searchable (Redmine::Search.available_search_types)

 set/update author on contact creation

 sort out by projectid when showing all contacts
 research atachments/_links for .js deletion of newly added attachments

---

- installation

> bundle exec rake redmine:plugins:migrate [RAILS_ENV=production]

> then enable plugin within projects settings

- uninstall

> bundle exec rake redmine:plugins:migrate NAME=easy_contacts VERSION=0 [RAILS_ENV=production]

more info on plugin creation can be found at:
www.redmine.org/projects/redmine/wiki/Plugin_Tutorial
